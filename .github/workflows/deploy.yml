name: CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # âœ… Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # âœ… Login to AWS ECR
      - name: Login to AWS ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      # âœ… Build Docker image
      - name: Build Docker image
        run: docker build -t fastapi-app .

      # âœ… Tag and push image to AWS ECR
      - name: Push Docker image to AWS ECR
        run: |
          docker tag fastapi-app ${{ secrets.ECR_REGISTRY }}/fastapi-app:latest
          docker push ${{ secrets.ECR_REGISTRY }}/fastapi-app:latest

      # âœ… Deploy to AWS EC2
      - name: Deploy to EC2 using Docker Compose
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Navigate to project directory
            cd /home/ubuntu/fastapi-book-project || exit

            # Pull latest changes
            git reset --hard
            git pull origin main

            # Login to AWS ECR
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

            # Pull the latest Docker image
            sudo docker-compose pull

            # Restart the container using docker-compose
            sudo docker-compose down
            sudo docker-compose up -d

            # Restart Nginx
            sudo systemctl restart nginx

            echo "Deployment Successful using Docker Compose! ðŸš€"
